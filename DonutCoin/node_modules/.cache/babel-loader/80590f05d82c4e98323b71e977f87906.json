{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  isDisjointFrom: function isDisjointFrom(iterable) {\n    var set = anObject(this);\n    var hasCheck = aCallable(set.has);\n    return !iterate(iterable, function (value, stop) {\n      if (call(hasCheck, set, value) === true) return stop();\n    }, {\n      INTERRUPTED: true\n    }).stopped;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}