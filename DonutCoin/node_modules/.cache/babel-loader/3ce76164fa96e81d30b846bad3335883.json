{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar aCallable = require('../internals/a-callable');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar iterate = require('../internals/iterate');\n\nvar push = uncurryThis([].push); // `Map.groupBy` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Map',\n  stat: true,\n  forced: true\n}, {\n  groupBy: function groupBy(iterable, keyDerivative) {\n    aCallable(keyDerivative);\n    var iterator = getIterator(iterable);\n    var newMap = new this();\n    var has = aCallable(newMap.has);\n    var get = aCallable(newMap.get);\n    var set = aCallable(newMap.set);\n    iterate(iterator, function (element) {\n      var derivedKey = keyDerivative(element);\n      if (!call(has, newMap, derivedKey)) call(set, newMap, derivedKey, [element]);else push(call(get, newMap, derivedKey), element);\n    }, {\n      IS_ITERATOR: true\n    });\n    return newMap;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}